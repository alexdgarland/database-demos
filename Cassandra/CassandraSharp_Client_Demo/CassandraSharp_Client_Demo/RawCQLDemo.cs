
using System;
using System.Linq;

using Shared.Customer;

using CassandraSharp;
using CassandraSharp.CQLPoco;

namespace CassandraSharp_Client_Demo
{
    class RawCQLDemo
    {
        public static void Run(ICluster cluster)
        {

            ICqlCommand cmd = cluster.CreatePocoCommand();


            // Create a customer in memory

            CassandraCustomer c1 = Customer.GetDefault<CassandraCustomer>();
            Console.WriteLine(String.Format("\nInitial Customer:\n\n{0}\n", c1.ToString()));
            int savedCustomerID = c1.CustomerID;
            

            // Save customer to Cassandra (CQL query is generated by my CassandraCustomer object)

            Console.WriteLine("Saving data to Cassandra using raw CQL statement:\n{0}\n", c1.GetSaveCQL());
            c1.Save(cmd);
            

            // Retrieve a copy of the customer from Cassandra
            // Again - CQL is generated in the CassandraCustomer class

            CassandraCustomer c2 = CassandraCustomer.RetrieveCustomer(cmd, savedCustomerID);
            Console.WriteLine(String.Format("\nRetrieved Customer:\n\n{0}\n", c2.ToString()));


            // Update original object, save and then retrieve

            c1.Addresses.Add("200 Some Avenue, Some Town, Somewhere, PO5 CD3");
            Console.WriteLine("\n\nUpdating existing record in Cassandra using raw CQL statement:\n{0}\n", c1.GetSaveCQL());
            c1.Save(cmd);

            c2 = CassandraCustomer.RetrieveCustomer(cmd, savedCustomerID);
            Console.WriteLine(String.Format("\nRetrieved Customer (after adding new address):\n\n{0}\n", c2.ToString()));


        }
    }

}
